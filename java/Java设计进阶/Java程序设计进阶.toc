\contentsline {chapter}{\numberline {第一章\hspace {.3em}}线程 上}{5}{chapter.1}%
\contentsline {section}{\numberline {1.1}线程的基本概念}{5}{section.1.1}%
\contentsline {subsubsection}{线程的概念模型}{5}{subsubsection*.2}%
\contentsline {subsubsection}{线程体}{5}{subsubsection*.3}%
\contentsline {subsubsection}{构造线程的两种方法}{6}{subsubsection*.4}%
\contentsline {subsubsection}{题目}{6}{subsubsection*.5}%
\contentsline {section}{\numberline {1.2}通过Thread类创建线程}{6}{section.1.2}%
\contentsline {subsection}{\numberline {1.2.1}Thread类}{6}{subsection.1.2.1}%
\contentsline {subsection}{\numberline {1.2.2}创建线程}{6}{subsection.1.2.2}%
\contentsline {subsubsection}{问题}{7}{subsubsection*.6}%
\contentsline {section}{\numberline {1.3}线程的休眠}{7}{section.1.3}%
\contentsline {subsection}{\numberline {1.3.1}延长主线程}{7}{subsection.1.3.1}%
\contentsline {subsection}{\numberline {1.3.2}问题}{7}{subsection.1.3.2}%
\contentsline {section}{\numberline {1.4}Thread类详解}{7}{section.1.4}%
\contentsline {section}{\numberline {1.5}通过Runnable接口创建线程}{7}{section.1.5}%
\contentsline {subsection}{\numberline {1.5.1}Runnable使用及特点}{7}{subsection.1.5.1}%
\contentsline {subsection}{\numberline {1.5.2}问题}{9}{subsection.1.5.2}%
\contentsline {section}{\numberline {1.6}线程内部的数据共享}{9}{section.1.6}%
\contentsline {chapter}{\numberline {第二章\hspace {.3em}}线程中}{11}{chapter.2}%
\contentsline {section}{\numberline {2.1}线程同步的思路}{11}{section.2.1}%
\contentsline {subsection}{\numberline {2.1.1}多线程的同步控制}{11}{subsection.2.1.1}%
\contentsline {section}{\numberline {2.2}线程同步的实现方式-Synchronization}{14}{section.2.2}%
\contentsline {subsection}{\numberline {2.2.1}线程同步}{14}{subsection.2.2.1}%
\contentsline {subsubsection}{synchronized}{14}{subsubsection*.7}%
\contentsline {section}{\numberline {2.3}线程的等待和唤醒}{17}{section.2.3}%
\contentsline {subsection}{\numberline {2.3.1}线程的等待-wait()方法}{17}{subsection.2.3.1}%
\contentsline {subsection}{\numberline {2.3.2}线程的唤醒-notify()和notifyAll()方法}{17}{subsection.2.3.2}%
\contentsline {section}{\numberline {2.4}后台线程}{18}{section.2.4}%
\contentsline {section}{\numberline {2.5}线程的生命周期与死锁}{19}{section.2.5}%
\contentsline {subsection}{\numberline {2.5.1}线程的生命周期}{19}{subsection.2.5.1}%
\contentsline {subsection}{\numberline {2.5.2}死锁}{20}{subsection.2.5.2}%
\contentsline {subsection}{\numberline {2.5.3}控制线程的生命}{20}{subsection.2.5.3}%
\contentsline {section}{\numberline {2.6}线程的调度}{20}{section.2.6}%
\contentsline {subsection}{\numberline {2.6.1}线程的优先级}{20}{subsection.2.6.1}%
\contentsline {chapter}{\numberline {第三章\hspace {.3em}}线程下}{23}{chapter.3}%
\contentsline {section}{\numberline {3.1}线程安全与线程兼容与对立}{23}{section.3.1}%
\contentsline {subsection}{\numberline {3.1.1}线程安全}{23}{subsection.3.1.1}%
\contentsline {subsection}{\numberline {3.1.2}不可变}{23}{subsection.3.1.2}%
\contentsline {subsection}{\numberline {3.1.3}绝对线程安全}{24}{subsection.3.1.3}%
\contentsline {subsection}{\numberline {3.1.4}相对线程安全}{24}{subsection.3.1.4}%
\contentsline {subsection}{\numberline {3.1.5}线程兼容和线程对立}{25}{subsection.3.1.5}%
\contentsline {section}{\numberline {3.2}线程的安全实现-互斥同步}{26}{section.3.2}%
\contentsline {subsection}{\numberline {3.2.1}互斥同步}{26}{subsection.3.2.1}%
\contentsline {section}{\numberline {3.3}线程的安全实现-非阻塞同步}{27}{section.3.3}%
\contentsline {section}{\numberline {3.4}线程的安全实现-无同步方案}{28}{section.3.4}%
\contentsline {subsection}{\numberline {3.4.1}无同步方案-可重入代码}{28}{subsection.3.4.1}%
\contentsline {subsection}{\numberline {3.4.2}无同步方案-线程本地存储}{28}{subsection.3.4.2}%
\contentsline {section}{\numberline {3.5}锁优化}{29}{section.3.5}%
\contentsline {subsection}{\numberline {3.5.1}自旋锁}{29}{subsection.3.5.1}%
\contentsline {subsection}{\numberline {3.5.2}自适应锁}{30}{subsection.3.5.2}%
\contentsline {subsection}{\numberline {3.5.3}锁消除}{30}{subsection.3.5.3}%
\contentsline {subsection}{\numberline {3.5.4}锁粗化}{30}{subsection.3.5.4}%
\contentsline {subsection}{\numberline {3.5.5}偏向锁}{30}{subsection.3.5.5}%
\contentsline {section}{\numberline {3.6}小结}{30}{section.3.6}%
